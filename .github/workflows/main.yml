name: cross-compile dintwm

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "contains(github.event.commits[0].message, '[build]')"
    container:
      image: docker.pkg.github.com/rasmusedgar/dintwm/dintwmbuild:latest
      credentials:
        username: rasmusedgar
        password: ${{ secrets.EDGAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Build dintwm
        run: make all
      - name: Upload artifact 
        uses: actions/upload-artifact@v2
        with:
          name: dintwm
          path: dintwm
          retention-days: 1

  package:
    runs-on: ubuntu-latest
    if: "contains(github.event.commits[0].message, '[pkg]')"
    container:
      image: docker.pkg.github.com/rasmusedgar/dintwm/dintwmbuild:latest
      credentials:
        username: rasmusedgar
        password: ${{ secrets.EDGAR_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: dintwm
      - name: Package
        run: |
          mkdir -p package/dintwm
          cp {dintwm,dintwm.info} package/dintwm/
          cd package
          lha c dintwm.lha dintwm/ 
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dintwm.lha
          asset_name: dintwm.lha
          asset_content_type: application/octet-stream
