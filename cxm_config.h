// Copyright 2021 Rasmus Edgar
char TYPE_TILE[] = "POPKEY_TILE";
char TYPE_HGRID[] = "POPKEY_HGRID";
char TYPE_SPIRAL[] = "POPKEY_SPIRAL";
char TYPE_DWINDLE[] = "POPKEY_DWINDLE";
char TYPE_SWITCHF[] = "POPKEY_SWITCHF";
char TYPE_SWITCHB[] = "POPKEY_SWITCHB";
char TYPE_INCTOPGAP[] = "POPKEY_INCTOPGAP";
char TYPE_INCBOTTOMGAP[] = "POPKEY_INCBOTTOMGAP";
char TYPE_INCLEFTGAP[] = "POPKEY_INCLEFTGAP";
char TYPE_INCRIGHTGAP[] = "POPKEY_INCRIGHTGAP";
char TYPE_DECTOPGAP[] = "POPKEY_DECTOPGAP";
char TYPE_DECBOTTOMGAP[] = "POPKEY_DECBOTTOMGAP";
char TYPE_DECLEFTGAP[] = "POPKEY_DECLEFTGAP";
char TYPE_DECRIGHTGAP[] = "POPKEY_DECRIGHTGAP";
char TYPE_INCALLGAPS[] = "POPKEY_INCALLGAPS";
char TYPE_DECALLGAPS[] = "POPKEY_DECALLGAPS";
char TYPE_TILE_OFF[] = "POPKEY_TILE_OFF";
char TYPE_KEY_CMD_0[] = "POPKEY_CMD_0";
char TYPE_KEY_CMD_1[] = "POPKEY_CMD_1";
char TYPE_KEY_CMD_2[] = "POPKEY_CMD_2";
char TYPE_KEY_CMD_3[] = "POPKEY_CMD_3";
char TYPE_KEY_CMD_4[] = "POPKEY_CMD_4";
char TYPE_KEY_CMD_5[] = "POPKEY_CMD_5";
char TYPE_KEY_CMD_6[] = "POPKEY_CMD_6";
char TYPE_KEY_CMD_7[] = "POPKEY_CMD_7";
char TYPE_KEY_CMD_8[] = "POPKEY_CMD_8";
char TYPE_KEY_CMD_9[] = "POPKEY_CMD_9";
char TYPE_KEY_WS_0[] = "POPKEY_WS_0";
char TYPE_KEY_WS_1[] = "POPKEY_WS_1";
char TYPE_KEY_WS_2[] = "POPKEY_WS_2";
char TYPE_KEY_WS_3[] = "POPKEY_WS_3";
char TYPE_KEY_WS_4[] = "POPKEY_WS_4";
char TYPE_KEY_WS_5[] = "POPKEY_WS_5";
char TYPE_KEY_CWS_0[] = "POPKEY_CWS_0";
char TYPE_KEY_CWS_1[] = "POPKEY_CWS_1";
char TYPE_KEY_CWS_2[] = "POPKEY_CWS_2";
char TYPE_KEY_CWS_3[] = "POPKEY_CWS_3";
char TYPE_KEY_CWS_4[] = "POPKEY_CWS_4";
char TYPE_KEY_CWS_5[] = "POPKEY_CWS_5";
char TYPE_KEY_CXM_EXIT[] = "POPKEY_CXM_EXIT";
char TYPE_TOPGAP[] = "TOPGAP";
char TYPE_DEFAULT_TOPGAP[] = "DEFAULT_TOPGAP";
char TYPE_BOTTOMGAP[] = "BOTTOMGAP";
char TYPE_LEFTGAP[] = "LEFTGAP";
char TYPE_RIGHTGAP[] = "RIGHTGAP";
char TYPE_AUTO[] = "AUTO";
char TYPE_AUTO_INTERVAL_DELAY[] = "AUTO_INTERVAL_DELAY";
char TYPE_TILE_FACT[] = "TILE_FACT";
char TYPE_GAP_CHANGE_VALUE[] = "GAP_CHANGE_VALUE";
char TYPE_BAR[] = "BAR";
char TYPE_BAR_HIDE_EMPTY[] = "BAR_HIDE_EMPTY";
char TYPE_BAR_BG_COL[] = "BAR_BG_COL";
char TYPE_BAR_FPW_COL[] = "BAR_FPW_COL";
char TYPE_BAR_BPW_COL[] = "BAR_BPW_COL";
char TYPE_BAR_FPCURW_COL[] = "BAR_FPCURW_COL";
char TYPE_BAR_BPCURW_COL[] = "BAR_BPCURW_COL";
char TYPE_BAR_FPTM_COL[] = "BAR_FPTM_COL";
char TYPE_BAR_BPTM_COL[] = "BAR_BPTM_COL";
char TYPE_BAR_FPTI_COL[] = "BAR_FPTI_COL";
char TYPE_BAR_BPTI_COL[] = "BAR_BPTI_COL";
char TYPE_BAR_FPSEP_ONE_COL[] = "BAR_FPSEP_ONE_COL";
char TYPE_BAR_BPSEP_ONE_COL[] = "BAR_BPSEP_ONE_COL";
char TYPE_BAR_FPSEP_TWO_COL[] = "BAR_FPSEP_TWO_COL";
char TYPE_BAR_BPSEP_TWO_COL[] = "BAR_BPSEP_TWO_COL";
char TYPE_BAR_TEXT_WS0[] = "BAR_TEXT_WS0";
char TYPE_BAR_TEXT_WS1[] = "BAR_TEXT_WS1";
char TYPE_BAR_TEXT_WS2[] = "BAR_TEXT_WS2";
char TYPE_BAR_TEXT_WS3[] = "BAR_TEXT_WS3";
char TYPE_BAR_TEXT_WS4[] = "BAR_TEXT_WS4";
char TYPE_BAR_TEXT_WS5[] = "BAR_TEXT_WS5";
char TYPE_BAR_TEXT_TILE[] = "BAR_TEXT_TILE";
char TYPE_BAR_TEXT_GRID[] = "BAR_TEXT_GRID";
char TYPE_BAR_TEXT_DWINDLE[] = "BAR_TEXT_DWINDLE";
char TYPE_BAR_TEXT_SPIRAL[] = "BAR_TEXT_SPIRAL";
char TYPE_BAR_TEXT_SEP_1[] = "BAR_TEXT_SEP_1";
char TYPE_BAR_TEXT_SEP_2[] = "BAR_TEXT_SEP_2";
char TYPE_BAR_TEXT_SPACE[] = "BAR_TEXT_SPACE";
char TYPE_EXCL_WTYPE_0[] = "EXCL_WTYPE_0";
char TYPE_EXCL_WTYPE_1[] = "EXCL_WTYPE_1";
char TYPE_EXCL_WTYPE_2[] = "EXCL_WTYPE_2";
char TYPE_EXCL_WTYPE_3[] = "EXCL_WTYPE_3";
char TYPE_EXCL_WTYPE_4[] = "EXCL_WTYPE_4";
char TYPE_EXCL_WTYPE_5[] = "EXCL_WTYPE_5";
char TYPE_EXCL_WTYPE_6[] = "EXCL_WTYPE_6";
char TYPE_EXCL_WTYPE_7[] = "EXCL_WTYPE_7";
char TYPE_EXCL_WTYPE_8[] = "EXCL_WTYPE_8";
char TYPE_EXCL_WTYPE_9[] = "EXCL_WTYPE_9";
char TYPE_INCL_WTYPE_0[] = "INCL_WTYPE_0";
char TYPE_INCL_WTYPE_1[] = "INCL_WTYPE_1";
char TYPE_INCL_WTYPE_2[] = "INCL_WTYPE_2";
char TYPE_INCL_WTYPE_3[] = "INCL_WTYPE_3";
char TYPE_INCL_WTYPE_4[] = "INCL_WTYPE_4";
char TYPE_INCL_WTYPE_5[] = "INCL_WTYPE_5";
char TYPE_INCL_WTYPE_6[] = "INCL_WTYPE_6";
char TYPE_INCL_WTYPE_7[] = "INCL_WTYPE_7";
char TYPE_INCL_WTYPE_8[] = "INCL_WTYPE_8";
char TYPE_INCL_WTYPE_9[] = "INCL_WTYPE_9";
char TYPE_CONLINE_0[] = "CONLINE_0";
char TYPE_CONLINE_1[] = "CONLINE_1";
char TYPE_CONLINE_2[] = "CONLINE_2";
char TYPE_CONLINE_3[] = "CONLINE_3";
char TYPE_CONLINE_4[] = "CONLINE_4";
char TYPE_CONLINE_5[] = "CONLINE_5";
char TYPE_CONLINE_6[] = "CONLINE_6";
char TYPE_CONLINE_7[] = "CONLINE_7";
char TYPE_CONLINE_8[] = "CONLINE_8";
char TYPE_CONLINE_9[] = "CONLINE_9";
char TYPE_CMD_0[] = "CMD_0";
char TYPE_CMD_1[] = "CMD_1";
char TYPE_CMD_2[] = "CMD_2";
char TYPE_CMD_3[] = "CMD_3";
char TYPE_CMD_4[] = "CMD_4";
char TYPE_CMD_5[] = "CMD_5";
char TYPE_CMD_6[] = "CMD_6";
char TYPE_CMD_7[] = "CMD_7";
char TYPE_CMD_8[] = "CMD_8";
char TYPE_CMD_9[] = "CMD_9";
char TYPE_INFO_OFF[] = "INFO_OFF";
char TYPE_VWS_ON[] = "VWS_ON";
// Change default rawkey combos from here. Leave above alone.
char KEY_TILE[] = "rawkey " MOD1 " " MOD2 " t";
char KEY_HGRID[] = "rawkey " MOD1 " " MOD2 " g";
char KEY_SPIRAL[] = "rawkey " MOD1 " " MOD2 " f";
char KEY_DWINDLE[] = "rawkey " MOD1 " " MOD2 " d";
char KEY_SWITCHF[] = "rawkey " MOD1 " " MOD2 " s";
char KEY_SWITCHB[] = "rawkey " MOD1 " " MOD2 " x";
char KEY_INCTOPGAP[] = "rawkey " MOD1 " " MOD2 " cursor_up";
char KEY_INCBOTTOMGAP[] = "rawkey " MOD1 " " MOD2 " cursor_down";
char KEY_INCLEFTGAP[] = "rawkey " MOD1 " " MOD2 " cursor_left";
char KEY_INCRIGHTGAP[] = "rawkey " MOD1 " " MOD2 " cursor_right";
char KEY_DECTOPGAP[] = "rawkey " MOD1 " " MOD3 " cursor_up";
char KEY_DECBOTTOMGAP[] = "rawkey " MOD1 " " MOD3 " cursor_down";
char KEY_DECLEFTGAP[] = "rawkey " MOD1 " " MOD3 " cursor_left";
char KEY_DECRIGHTGAP[] = "rawkey " MOD1 " " MOD3 " cursor_right";
char KEY_INCALLGAPS[] = "rawkey " MOD1 " " MOD2 " numericpad +";
// double dash escapes special rawkey dash
char KEY_DECALLGAPS[] = "rawkey " MOD1 " " MOD2 " numericpad --";
char KEY_TILE_OFF[] = "rawkey " MOD1 " " MOD2 " o";
char KEY_CMD_0[] = "rawkey " MOD1 " " MOD2 " 0";
char KEY_CMD_1[] = "rawkey " MOD1 " " MOD2 " 1";
char KEY_CMD_2[] = "rawkey " MOD1 " " MOD2 " 2";
char KEY_CMD_3[] = "rawkey " MOD1 " " MOD2 " 3";
char KEY_CMD_4[] = "rawkey " MOD1 " " MOD2 " 4";
char KEY_CMD_5[] = "rawkey " MOD1 " " MOD2 " 5";
char KEY_CMD_6[] = "rawkey " MOD1 " " MOD2 " 6";
char KEY_CMD_7[] = "rawkey " MOD1 " " MOD2 " 7";
char KEY_CMD_8[] = "rawkey " MOD1 " " MOD2 " 8";
char KEY_CMD_9[] = "rawkey " MOD1 " " MOD2 " 9";
char KEY_WS_0[] = "rawkey " MOD1 " " MOD2 " numericpad 0";
char KEY_WS_1[] = "rawkey " MOD1 " " MOD2 " numericpad 1";
char KEY_WS_2[] = "rawkey " MOD1 " " MOD2 " numericpad 2";
char KEY_WS_3[] = "rawkey " MOD1 " " MOD2 " numericpad 3";
char KEY_WS_4[] = "rawkey " MOD1 " " MOD2 " numericpad 4";
char KEY_WS_5[] = "rawkey " MOD1 " " MOD2 " numericpad 5";
char KEY_CWS_0[] = "rawkey " MOD1 " " MOD3 " numericpad 0";
char KEY_CWS_1[] = "rawkey " MOD1 " " MOD3 " numericpad 1";
char KEY_CWS_2[] = "rawkey " MOD1 " " MOD3 " numericpad 2";
char KEY_CWS_3[] = "rawkey " MOD1 " " MOD3 " numericpad 3";
char KEY_CWS_4[] = "rawkey " MOD1 " " MOD3 " numericpad 4";
char KEY_CWS_5[] = "rawkey " MOD1 " " MOD3 " numericpad 5";
char KEY_CXM_EXIT[] = "rawkey " MOD1 " " MOD2 " q";

short autotile = FALSE;

unsigned char bdwarn[] = "Virtual WSs are incompatible with backdropped WB. Unbackdrop WB or remove TT VWS_ON. Quitting.";
unsigned char uqwarn[] = "Commodity is already running. Quitting.";
